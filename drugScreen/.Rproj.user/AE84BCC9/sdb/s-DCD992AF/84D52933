{
    "contents" : "drugScreenModuleUI <- function(id){\n  ns <- NS(id)\n  tagList(\n           sidebarPanel(\n             \n             h4('1. Select Cell Lines'), \n             selectInput(ns('cellLines'),NULL, choices = c('ALL', unique(drug_normViab$cellLine)),\n                         selectize=T, multiple=T, selected = 'ALL'),\n             \n             h4('2. Select Drugs'),\n             selectInput(ns('selected_drugs'),NULL, choices = c('ALL', unique(drug_normViab$drug)),\n                         selectize=T, multiple=T, selected = 'ALL'),\n             \n             br(), br(),\n             h4('Plot settings'),\n             selectInput(ns('facet_by'),'Facet by', choices =c('experiment', 'cellLine'),\n                         selected = c('experiment'),\n                         selectize=T, multiple=T)\n           ),\n           \n           mainPanel(\n             tabsetPanel(id=\"drug_screens\", type=\"tabs\",\n                         tabPanel(\"Viability\",\n                                  checkboxInput(ns(\"drugViability_heatmap_col_cluster\"), label=(\"cluster drugs (y-axis)\"), \n                                                value=TRUE),\n                                  hr(),\n                                  plotOutput(ns(\"global_drugViab_heatMap\"),height=\"700px\",width=\"auto\",hoverId=NULL),\n                                  br(), br(),\n                                  helpText(\"The heatmap above compares the normalized cell viablity(%) across the drug dosages(x-axis) \\n\n                                           Each y-axis row is a replicate for the selected cellLines and drugs.\")\n                                  \n                                  ),\n                         tabPanel(\"Max Efficacy\",\n                                  plotOutput(ns(\"drug_efficacy\"),height=\"700px\",width=\"auto\",hoverId=NULL),\n                                  helpText(\"ps: Efficacy is the % of cells that were killed by the given drug\")\n                         ),\n                         tabPanel(\"ICx\",\n                                  h4('Select Cell Viability % (ICx)'),\n                                  sliderInput(ns('selected_IC_value'),'IC Value', min=10,\n                                              max=90, step=10, value=50),\n                                  plotOutput(ns(\"drugScreen_ICx_plot\"),height=\"700px\",width=\"auto\",hoverId=NULL)\n                         ),\n                         tabPanel(\"Dose Response\",\n                                  radioButtons(ns(\"dose_response_plot_splitBy\"), label=(\"split graph by\"), \n                                               choices = c('drug', 'cellLine'), selected = 'drug'),\n                                  plotOutput(ns(\"drugResponse_plots\"),height=\"700px\",width=\"auto\",hoverId=NULL)\n                         )\n             )\n            )\n  )\n} \n\ndrugScreenModule <- function(input,output,session,data1,data2){\n  get_selected_cellLines <- reactive({\n    cellLines <- if('ALL' %in% input$cellLines) unique(data1$cellLine) else input$cellLines\n    validate(need(length(cellLines) != 0, \"At least one cellLine needs to be selected\" ) )\n    cellLines\n  })\n  \n  get_selected_drugs <- reactive({\n    drugs <- if('ALL' %in% input$selected_drugs) unique(data1$drug) else input$selected_drugs\n    validate(need(length(drugs) != 0, \"At least one drug needs to be selected\"))\n    drugs\n  })\n  \n  get_drug_flt_normViab <- reactive({\n    flt_Drug_normViab <- filter(data1, drug %in% get_selected_drugs())  \n    flt_Drug_normViab <- filter(flt_Drug_normViab, cellLine %in% get_selected_cellLines())  \n    flt_Drug_normViab\n  })\n  \n  get_drug_flt_ICVals <- reactive({\n    flt_drug_ICVals <- filter(data2, drug %in% get_selected_drugs())  \n    flt_drug_ICVals <- filter(flt_drug_ICVals, cellLine %in% get_selected_cellLines())  \n    flt_drug_ICVals\n  })\n  \n  output$drugScreen_ICx_plot <- renderPlot({\n    flt_drug_ICVals <- get_drug_flt_ICVals()\n    ICx <- eval(paste0('IC', input$selected_IC_value))\n    #remove NA\n    flt_drug_ICVals <- flt_drug_ICVals[! is.na(flt_drug_ICVals[ICx]), ]\n    #convert to log10\n    flt_drug_ICVals[ICx] <- log10(as.numeric(flt_drug_ICVals[,ICx])) \n    #keep rows where log10 ICx <= 0\n    flt_drug_ICVals <- flt_drug_ICVals[flt_drug_ICVals[ICx] <= 0,]\n    \n    \n    drug_levels <- flt_drug_ICVals %>%\n      group_by(drug) %>%\n      summarise(med=median(IC50, na.rm=T)) %>%\n      arrange(desc(med)) %>% select(drug)\n    drug_levels <- drug_levels$drug\n    flt_drug_ICVals$drug <- factor(flt_drug_ICVals$drug,levels=drug_levels)\n    facet_by <- paste(input$facet_by, collapse = ' + ' )\n    facet_by <- formula(paste(facet_by, ' ~ .'))\n    p <- ggplot(data=flt_drug_ICVals, aes_string(x=\"drug\", y=ICx, group=\"cellLine\")) \n    p <- p + geom_point(aes(color=cellLine), size=3) + theme_bw()\n    if( length(input$facet_by) > 0){\n      p <- p  + facet_grid(facet_by)    \n    }\n    p + theme(axis.text.x=element_text(angle=90, hjust=1)) + xlab('Drug') + ylab(paste0(ICx, ' (log10 molar conc)'))\n  })\n  \n  output$drug_efficacy <- renderPlot({\n    flt_drug_ICVals <- get_drug_flt_ICVals()\n    \n    drug_levels <- flt_drug_ICVals %>%\n      group_by(drug) %>%\n      summarise(med=median(maxEfficacy, na.rm=T)) %>%\n      arrange(desc(med)) %>% select(drug)\n    drug_levels <- drug_levels$drug\n    flt_drug_ICVals$drug <- factor(flt_drug_ICVals$drug,levels=drug_levels)\n    facet_by <- paste(input$facet_by, collapse = ' + ' )\n    facet_by <- formula(paste(facet_by, ' ~ .'))\n    p <- ggplot(data=flt_drug_ICVals, aes(x=drug, y=maxEfficacy*100, group=cellLine)) \n    p <- p + geom_point(aes(color=cellLine), size=3) + theme_bw()\n    if( length(input$facet_by) > 0){\n      p <- p  + facet_grid(facet_by)    \n    }\n    p <- p + theme(axis.text.x=element_text(angle=90, hjust=1)) + xlab('Drug') + ylab('% Efficacy')\n    p\n  })\n  \n  \n  output$global_drugViab_heatMap <- renderPlot({\n    \n    validate(need(length(get_selected_cellLines()) != 0, paste0(\" Please select cellLine/s\")))  \n    validate(need(length(input$selected_drugs) !=0 , paste0(\" Please select < 5 drugs\")))  \n    \n    x <- get_drug_flt_normViab()\n    drugViab_dosages <- dcast(x, experiment+stage+cellLine+drug+replicate ~ conc, value.var=\"normViability\",\n                              fun.aggregate = function(x) mean(x))\n    \n    m <- drugViab_dosages[,-c(1:6)] * 100  #to convert fraction to percentage viability\n    rowAnnotation <- drugViab_dosages[,c('drug'),drop=F]\n    #m.scaled <- t(scale(t(m)))\n    \n    #convert colnames to microMolar\n    colnames(m) <- as.numeric(colnames(m))*1e+6\n    #cluster_rows = if(drugViability_heatmap_col_cluster == TRUE) TRUE else NA\n    aheatmap(m,\n             scale='none',\n             distfun=\"euclidean\",\n             Colv=NA,\n             Rowv =  if(input$drugViability_heatmap_col_cluster == TRUE) TRUE else NA,\n             annRow = rowAnnotation,\n             info=TRUE,\n             cexRow=0,\n             main = 'Cell Viability v/s Drug Dosage(microMolar)',\n             sub = 'color signifies cell viability %'\n    )\n  })\n  \n  \n  output$drugResponse_plots <- renderPlot({\n    \n    validate(need(length(input$selected_drugs) != 0, paste0(\" Please select drug/s (max upto 4)\")))  \n    validate(need(length(input$selected_drugs) < 5, paste0(\" Please select < 5 drugs\")))  \n    flt_drug_normViab <- get_drug_flt_normViab()\n    \n    doseResp <- ddply(.data=flt_drug_normViab, .variables = c('drug', 'cellLine', 'experiment'), \n                      .fun = tmp_iterator, .parallel = T)\n    \n    facet_by <- paste(input$facet_by, collapse = ' + ' )\n    facet_by <- formula(paste(facet_by, ' ~ ', input$dose_response_plot_splitBy))\n    print(facet_by)\n    color_options = c('drug', 'cellLine')\n    color_by <- color_options[!color_options %in% input$dose_response_plot_splitBy]\n    \n    p <- ggplot(data=doseResp, aes_string(x=\"fittedX\", y=\"fittedY*100\", group=color_by))\n    p <- p + geom_line(aes_string(color=color_by)) + facet_grid(facet_by) + theme_bw()\n    p <- p + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')\n    p <- p + xlab('micromolar conc') + ylab('cell viability %') \n    p <- p + scale_x_continuous(breaks=seq(from=-10,to=-1,by=1),\n                                labels = lapply(seq(from=-10,to=-1,by=1), function(x) (10^x)*(1e+6)  ))\n    \n    p\n  })\n  \n  \n}",
    "created" : 1462376338852.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2937168913",
    "id" : "84D52933",
    "lastKnownWriteTime" : 1462377682,
    "path" : "~/Documents/shinyModule/drugScreen/drugScreenModule.R",
    "project_path" : "drugScreenModule.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}